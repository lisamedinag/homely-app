{"ast":null,"code":"var _jsxFileName = \"/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/homes/FormEditHome.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { createHome, editHome } from \"../../actions\";\nimport { Field, reduxForm } from 'redux-form';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormEditHome extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref;\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\",\n          placeholder: this.props.selectedHome.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      // const user = this.props.auth0.user.isAuthenticated ? this.props.auth0.user.email : null;\n      this.props.editHome(formValues.name, this.props.selectedHome._id);\n    };\n  }\n\n  renderError(_ref2) {\n    let {\n      error,\n      touched\n    } = _ref2;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Edit \", this.props.selectedHome.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          component: this.renderInput,\n          label: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedHome: state.selectedHome\n  };\n};\n\nconst authWrapped = withAuth0(FormEditHome);\nconst formWrapped = reduxForm({\n  form: 'homeEditForm',\n  validate\n})(authWrapped);\nexport default connect(mapStateToProps, {\n  editHome\n})(formWrapped);","map":{"version":3,"sources":["/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/homes/FormEditHome.js"],"names":["React","connect","createHome","editHome","Field","reduxForm","withAuth0","FormEditHome","Component","renderInput","input","label","meta","className","error","touched","props","selectedHome","name","renderError","onSubmit","formValues","_id","render","handleSubmit","validate","errors","mapStateToProps","state","authWrapped","formWrapped","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {createHome, editHome} from \"../../actions\";\nimport {Field, reduxForm} from 'redux-form';\nimport {withAuth0} from '@auth0/auth0-react';\n\n\nclass FormEditHome extends React.Component {\n    renderError({error, touched}) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" placeholder={this.props.selectedHome.name}/>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    onSubmit = formValues => {\n\n        // const user = this.props.auth0.user.isAuthenticated ? this.props.auth0.user.email : null;\n        this.props.editHome( formValues.name, this.props.selectedHome._id )\n    };\n\n    render() {\n\n        return (\n            <div>\n                <h1>Edit {this.props.selectedHome.name}</h1>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                    <Field name=\"name\" component={this.renderInput}\n                           label=\"Enter Name\" />\n\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.name) {\n        errors.name = 'You must enter a name';\n    }\n\n\n    return errors;\n};\n\nconst mapStateToProps = state => {\n    return {\n        selectedHome: state.selectedHome,\n    };\n};\n\nconst authWrapped = withAuth0(FormEditHome)\n\nconst formWrapped = reduxForm(\n    {form: 'homeEditForm', validate}\n)(authWrapped);\n\nexport default connect(mapStateToProps, {editHome})(formWrapped)\n"]},"metadata":{},"sourceType":"module"}