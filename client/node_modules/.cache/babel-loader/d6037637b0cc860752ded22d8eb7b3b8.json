{"ast":null,"code":"var _jsxFileName = \"/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/tasks/TaskListByHome.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Loading from \"../utils/Loading\";\nimport { fetchTasks, selectTask } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskListByHome extends Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  renderList() {\n    return this.props.tasks.map(task => {\n      if (task.home === this.props.selectedHome._id) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home/dashboard/tasks/details\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => this.props.selectTask(task),\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }\n\n  render() {\n    if (this.props.selectedHome && this.props.tasks) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui centered grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center aligned sixteen wide column\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"User List of \", this.props.selectedHome.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui celled list\",\n          children: this.renderList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home/dashboard/tasks/new\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            children: \"Create new Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: Object.values(state.tasks),\n    selectedHome: state.selectedHome\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks,\n  selectTask\n})(TaskListByHome);","map":{"version":3,"sources":["/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/tasks/TaskListByHome.js"],"names":["React","Component","connect","Loading","fetchTasks","selectTask","Link","TaskListByHome","componentDidMount","props","renderList","tasks","map","task","home","selectedHome","_id","name","render","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,eAArC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAGA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AACnCO,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,UAAX;AACH;;AAEDM,EAAAA,UAAU,GAAG;AAET,WAAO,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAEhC,UAAIA,IAAI,CAACC,IAAL,KAAc,KAAKL,KAAL,CAAWM,YAAX,CAAwBC,GAA1C,EAA8C;AAC1C,4BACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,+BAAT;AAAA,mCACI;AAAM,cAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWJ,UAAX,CAAsBQ,IAAtB,CAArB;AAAA,wBAAmDA,IAAI,CAACI;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUJ,IAAI,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH;AAEJ,KAbM,CAAP;AAcH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKT,KAAL,CAAWM,YAAX,IAA2B,KAAKN,KAAL,CAAWE,KAA1C,EAAkD;AAC9C,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,iCACQ;AAAA,wCAAkB,KAAKF,KAAL,CAAWM,YAAX,CAAwBE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,gBADA,eAKI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiC,KAAKP,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,2BAAT;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH,KAbD,MAaO;AACH,0BAAO;AAAA,+BAAK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAxCkC;;AA2CvC,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHT,IAAAA,KAAK,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,KAApB,CADJ;AAEHI,IAAAA,YAAY,EAAEK,KAAK,CAACL;AAFjB,GAAP;AAIH,CALD;;AAOA,eAAeb,OAAO,CAClBiB,eADkB,EACD;AAACf,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CADC,CAAP,CAEbE,cAFa,CAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {connect} from \"react-redux\";\nimport Loading from \"../utils/Loading\";\n\nimport {fetchTasks, selectTask} from \"../../actions\";\nimport {Link} from \"react-router-dom\";\n\n\nclass TaskListByHome extends Component {\n    componentDidMount() {\n        this.props.fetchTasks()\n    }\n\n    renderList() {\n\n        return this.props.tasks.map(task => {\n\n            if (task.home === this.props.selectedHome._id){\n                return (\n                    <div key={task._id}>\n                        <Link to=\"/home/dashboard/tasks/details\">\n                            <div  onClick={() => this.props.selectTask(task)}>{task.name}</div>\n                        </Link>\n                    </div>\n                )\n\n            }\n\n        })\n    }\n\n    render() {\n        if (this.props.selectedHome && this.props.tasks ) {\n            return (\n                <div className=\"ui centered grid\">\n                <div className=\"center aligned sixteen wide column\">\n                        <h2>User List of {this.props.selectedHome.name}</h2>\n                    </div>\n                    \n                    <div className=\"ui celled list\">{this.renderList()}</div>\n                    <Link to=\"/home/dashboard/tasks/new\">\n                        <button className=\"button\">Create new Task</button>\n                    </Link>\n                </div>\n            )\n        } else {\n            return <div><Loading/></div>\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        tasks: Object.values(state.tasks),\n        selectedHome: state.selectedHome\n    };\n};\n\nexport default connect(\n    mapStateToProps, {fetchTasks, selectTask}\n)(TaskListByHome);\n\n"]},"metadata":{},"sourceType":"module"}