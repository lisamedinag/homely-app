{"ast":null,"code":"var _jsxFileName = \"/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/tasks/TaskCreateForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { createTask } from \"../../actions\";\nimport { Field, reduxForm } from 'redux-form';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport Loading from \"../utils/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskCreateForm extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref;\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderSelect = _ref2 => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref2;\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...input,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      // const user = this.props.auth0.user.isAuthenticated ? this.props.auth0.user.email : null;\n      this.props.createTask({\n        form: formValues,\n        home: this.props.selectedHome._id,\n        user: this.props.auth0.user.email\n      });\n    };\n  }\n\n  renderError(_ref3) {\n    let {\n      error,\n      touched\n    } = _ref3;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.props.selectedHome === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    }\n\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Create a Task for \", this.props.selectedHome.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          component: this.renderInput,\n          label: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"points\",\n          component: this.renderInput,\n          label: \"Enter points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderInput,\n          label: \"Enter description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"assignedUser\",\n          component: this.renderSelect,\n          label: \"Assign an user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  if (!formValues.points) {\n    errors.name = 'You must enter the amount of points';\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedHome: state.selectedHome\n  };\n};\n\nconst authWrapped = withAuth0(TaskCreateForm);\nconst formWrapped = reduxForm({\n  form: 'taskCreateForm',\n  validate\n})(authWrapped);\nexport default connect(mapStateToProps, {\n  createTask\n})(formWrapped); // name: formValues.form.name,\n//     points: formValues.form.points,\n//     description: formValues.form.description,\n//     isFinished: formValues.form.isFinished,\n//     assignedUser: formValues.form.assignedUser,\n//     home: formValues.form.home","map":{"version":3,"sources":["/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/tasks/TaskCreateForm.js"],"names":["React","connect","createTask","Field","reduxForm","withAuth0","Loading","TaskCreateForm","Component","renderInput","input","label","meta","className","error","touched","renderError","renderSelect","onSubmit","formValues","props","form","home","selectedHome","_id","user","auth0","email","render","console","log","name","handleSubmit","validate","errors","points","mapStateToProps","state","authWrapped","formWrapped"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport { createTask} from \"../../actions\";\nimport {Field, reduxForm} from 'redux-form';\nimport {withAuth0} from '@auth0/auth0-react';\nimport Loading from \"../utils/Loading\";\n\n\nclass TaskCreateForm extends React.Component {\n    renderError({error, touched}) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    renderSelect = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                {/*<input {...input} autoComplete=\"off\"/>*/}\n                <select {...input}>\n                    <option></option>\n                </select>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    onSubmit = formValues => {\n\n        // const user = this.props.auth0.user.isAuthenticated ? this.props.auth0.user.email : null;\n        this.props.createTask({\n            form: formValues,\n            home: this.props.selectedHome._id,\n            user: this.props.auth0.user.email\n\n        })\n    };\n\n    render() {\n        if (this.props.selectedHome === null) {\n            return <div><Loading/></div>\n        }\n        console.log(this.props)\n\n        return (\n            <div>\n                <h1>Create a Task for {this.props.selectedHome.name}</h1>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\n                    <Field name=\"name\" component={this.renderInput} label=\"Enter Name\"/>\n                    <Field name=\"points\" component={this.renderInput} label=\"Enter points\"/>\n                    <Field name=\"description\" component={this.renderInput} label=\"Enter description\"/>\n                    <Field name=\"assignedUser\" component={this.renderSelect} label=\"Assign an user\"/>\n\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.name) {\n        errors.name = 'You must enter a name';\n    }\n\n    if (!formValues.points) {\n        errors.name = 'You must enter the amount of points';\n    }\n\n\n    return errors;\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        selectedHome: state.selectedHome,\n    };\n};\n\nconst authWrapped = withAuth0(TaskCreateForm)\n\nconst formWrapped = reduxForm(\n    {form: 'taskCreateForm', validate}\n)(authWrapped);\n\nexport default connect(mapStateToProps, {createTask})(formWrapped)\n\n// name: formValues.form.name,\n//     points: formValues.form.points,\n//     description: formValues.form.description,\n//     isFinished: formValues.form.isFinished,\n//     assignedUser: formValues.form.assignedUser,\n//     home: formValues.form.home\n"]},"metadata":{},"sourceType":"module"}