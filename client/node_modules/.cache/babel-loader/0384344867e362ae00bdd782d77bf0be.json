{"ast":null,"code":"var _jsxFileName = \"/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/homes/HomeCreateForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { createHome } from \"../../actions\";\nimport { Field, reduxForm } from 'redux-form';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HomeCreateForm extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref;\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      // const user = this.props.auth0.user.isAuthenticated ? this.props.auth0.user.email : null;\n      this.props.createHome({\n        form: formValues,\n        user: this.props.auth0.user.email\n      });\n    };\n  }\n\n  renderError(_ref2) {\n    let {\n      error,\n      touched\n    } = _ref2;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hola \", this.props.auth0.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          component: this.renderInput,\n          label: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  return errors;\n};\n\nconst authWrapped = withAuth0(HomeCreateForm);\nconst formWrapped = reduxForm({\n  form: 'homeCreateForm',\n  validate\n})(authWrapped);\nexport default connect(null, {\n  createHome\n})(formWrapped);","map":{"version":3,"sources":["/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/homes/HomeCreateForm.js"],"names":["React","connect","createHome","Field","reduxForm","withAuth0","HomeCreateForm","Component","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","form","user","auth0","email","render","console","log","name","handleSubmit","validate","errors","authWrapped","formWrapped"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,eAAzB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAGA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAWzCC,WAXyC,GAW3B,QAA0B;AAAA,UAAzB;AAACC,QAAAA,KAAD;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAyB;AACpC,YAAMC,SAAS,GAAI,SAAQD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAuC,EAAG,EAArE;AACA,0BACI;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA,gCACI;AAAA,oBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,sBAAWD,KAAX;AAAkB,UAAA,YAAY,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGK,KAAKM,WAAL,CAAiBJ,IAAjB,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KApBwC;;AAAA,SAsBzCK,QAtByC,GAsB9BC,UAAU,IAAI;AAErB;AACA,WAAKC,KAAL,CAAWhB,UAAX,CAAsB;AAClBiB,QAAAA,IAAI,EAAEF,UADY;AAElBG,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBD,IAAjB,CAAsBE;AAFV,OAAtB;AAKH,KA9BwC;AAAA;;AACzCP,EAAAA,WAAW,QAAmB;AAAA,QAAlB;AAACF,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAkB;;AAC1B,QAAIA,OAAO,IAAID,KAAf,EAAsB;AAClB,0BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAuBDU,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,wBACI;AAAA,8BACI;AAAA,4BAAU,KAAKA,KAAL,CAAWG,KAAX,CAAiBD,IAAjB,CAAsBM,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAM,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,YAAX,CAAwB,KAAKX,QAA7B,CAAhB;AAAwD,QAAA,SAAS,EAAC,eAAlE;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAE,KAAKR,WAAnC;AAAgD,UAAA,KAAK,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA5CwC;;AA+C7C,MAAMoB,QAAQ,GAAGX,UAAU,IAAI;AAC3B,QAAMY,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACZ,UAAU,CAACS,IAAhB,EAAsB;AAClBG,IAAAA,MAAM,CAACH,IAAP,GAAc,uBAAd;AACH;;AAGD,SAAOG,MAAP;AACH,CATD;;AAYA,MAAMC,WAAW,GAAGzB,SAAS,CAACC,cAAD,CAA7B;AAEA,MAAMyB,WAAW,GAAG3B,SAAS,CACzB;AAACe,EAAAA,IAAI,EAAE,gBAAP;AAAyBS,EAAAA;AAAzB,CADyB,CAAT,CAElBE,WAFkB,CAApB;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA4B6B,WAA5B,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {createHome} from \"../../actions\";\nimport {Field, reduxForm} from 'redux-form';\nimport { withAuth0 } from '@auth0/auth0-react';\n\n\nclass HomeCreateForm extends React.Component {\n    renderError({error, touched}) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n    onSubmit = formValues => {\n\n        // const user = this.props.auth0.user.isAuthenticated ? this.props.auth0.user.email : null;\n        this.props.createHome({\n            form: formValues,\n            user: this.props.auth0.user.email\n\n        })\n    };\n\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                <h1>Hola {this.props.auth0.user.name}</h1>\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                <Field name=\"name\" component={this.renderInput} label=\"Enter Name\"/>\n\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n            </div>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.name) {\n        errors.name = 'You must enter a name';\n    }\n\n\n    return errors;\n};\n\n\nconst authWrapped = withAuth0(HomeCreateForm)\n\nconst formWrapped = reduxForm(\n    {form: 'homeCreateForm', validate}\n)(authWrapped);\n\nexport default connect(null, {createHome})(formWrapped)\n"]},"metadata":{},"sourceType":"module"}