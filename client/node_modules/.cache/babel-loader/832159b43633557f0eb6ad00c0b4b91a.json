{"ast":null,"code":"var _jsxFileName = \"/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/rewards/FormEditReward.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { createReward, editReward } from \"../../actions\";\nimport { Field, reduxForm } from 'redux-form';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport Loading from \"../utils/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormEditReward extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta,\n        placeholder\n      } = _ref;\n      console.log();\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\",\n          placeholder: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.onSubmit = formValues => {\n      this.props.editReward({\n        form: formValues,\n        rewardId: this.props.selectedReward._id,\n        user: this.props.auth0.user.email\n      });\n    };\n  }\n\n  renderError(_ref2) {\n    let {\n      error,\n      touched\n    } = _ref2;\n\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    if (this.props.selectedHome === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.props.selectedReward.status === 'CLAIMED') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"You cant edit a completed task :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          component: this.renderInput,\n          label: \"Enter Name\",\n          placeholder: this.props.selectedReward.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"pointsWorth\",\n          component: this.renderInput,\n          label: \"Enter points worth\",\n          placeholder: this.props.selectedReward.pointsWorth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderInput,\n          label: \"Enter rewards description\",\n          placeholder: this.props.selectedReward.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  if (!formValues.pointsWorth) {\n    errors.name = 'You must enter the amount of points';\n  }\n\n  return errors;\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedReward: state.selectedReward\n  };\n};\n\nconst authWrapped = withAuth0(FormEditReward);\nconst formWrapped = reduxForm({\n  form: 'rewardCreateForm',\n  validate\n})(authWrapped);\nexport default connect(mapStateToProps, {\n  editReward\n})(formWrapped);","map":{"version":3,"sources":["/home/lmedina/Documents/Ironhack/Week9/h-app-reloaded/src/components/rewards/FormEditReward.js"],"names":["React","connect","createReward","editReward","Field","reduxForm","withAuth0","Loading","FormEditReward","Component","renderInput","input","label","meta","placeholder","console","log","className","error","touched","renderError","onSubmit","formValues","props","form","rewardId","selectedReward","_id","user","auth0","email","render","selectedHome","status","handleSubmit","name","pointsWorth","description","validate","errors","mapStateToProps","state","authWrapped","formWrapped"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {createReward, editReward} from \"../../actions\";\nimport {Field, reduxForm} from 'redux-form';\nimport {withAuth0} from '@auth0/auth0-react';\nimport Loading from \"../utils/Loading\";\n\n\nclass FormEditReward extends React.Component {\n    renderError({error, touched}) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            );\n        }\n    }\n\n    renderInput = ({input, label, meta, placeholder}) => {\n        console.log()\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" placeholder={placeholder}/>\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n\n\n\n    onSubmit = formValues => {\n        this.props.editReward({\n            form: formValues,\n            rewardId: this.props.selectedReward._id,\n            user: this.props.auth0.user.email\n\n        })\n    };\n\n    render() {\n        if (this.props.selectedHome === null) {\n            return <div><Loading/></div>\n        }\n\n        if (this.props.selectedReward.status === 'CLAIMED') {\n            return <div>You cant edit a completed task :(</div>\n        }\n\n        return (\n\n            <div>\n\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\n                    <Field name=\"name\" component={this.renderInput} label=\"Enter Name\" placeholder={this.props.selectedReward.name}/>\n                    <Field name=\"pointsWorth\" component={this.renderInput} label=\"Enter points worth\" placeholder={this.props.selectedReward.pointsWorth}/>\n                    <Field name=\"description\" component={this.renderInput} label=\"Enter rewards description\" placeholder={this.props.selectedReward.description}/>\n\n\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.name) {\n        errors.name = 'You must enter a name';\n    }\n\n    if (!formValues.pointsWorth) {\n        errors.name = 'You must enter the amount of points';\n    }\n\n\n    return errors;\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        selectedReward: state.selectedReward,\n    };\n};\n\nconst authWrapped = withAuth0(FormEditReward)\n\nconst formWrapped = reduxForm(\n    {form: 'rewardCreateForm', validate}\n)(authWrapped);\n\nexport default connect(mapStateToProps, {editReward})(formWrapped)\n\n\n"]},"metadata":{},"sourceType":"module"}